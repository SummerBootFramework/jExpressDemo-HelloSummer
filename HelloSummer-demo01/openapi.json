{
  "openapi" : "3.0.1",
  "paths" : {
    "/hellosummer1/hello/grpc/{input}" : {
      "get" : {
        "operationId" : "grpc",
        "parameters" : [ {
          "name" : "input",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/SessionContext"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/hellosummer1/hello/{name}" : {
      "get" : {
        "operationId" : "hello",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key !@#$%^&*()_+-=[]\\{}|;':\",./<>? 中文 ",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "color",
          "in" : "path",
          "required" : true,
          "style" : "matrix",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "color2",
          "in" : "path",
          "required" : true,
          "style" : "matrix",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MyResponse"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/hellosummer1/hello/post" : {
      "post" : {
        "operationId" : "helloPost",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/JsonNode"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MyResponse"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/hellosummer1/ping" : {
      "get" : {
        "tags" : [ "Load Balancing" ],
        "summary" : "ping service status",
        "description" : "Load Balancer (F5, Nginx, etc) will do the health check via this ping service, if Http Status is not 200(OK), the load Balancer will stop sending new request to this service.<br>Below is an example of F5 config: Basically it's one monitor that does the check to each member in the pool . It will mark each server within the pool member down if it does not receive a 200. <br><i>GET /myservices/myapp/ping HTTP/1.1\\r\\nConnection: Close\\r\\n\\r\\n</i>",
        "operationId" : "ping",
        "responses" : {
          "200" : {
            "description" : "The service status is healthy"
          },
          "5XX" : {
            "description" : "The service status is unhealthy if response code is not 200",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceError"
                }
              }
            }
          }
        }
      }
    },
    "/helloplugin/hello/{name}" : {
      "get" : {
        "operationId" : "hello_1",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "[a-zA-Z\\@\\.' ]{1,10}",
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MyResponse"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/helloplugin/hello/post" : {
      "post" : {
        "operationId" : "helloPost_1",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/JsonNode"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MyResponse"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MyResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "MyResponse" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "ts" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "Caller" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean"
          },
          "id" : {
            "type" : "number"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32"
          },
          "displayName" : {
            "type" : "string"
          },
          "tokenTtlSec" : {
            "type" : "integer",
            "format" : "int64"
          },
          "tenantId" : {
            "type" : "number"
          },
          "tenantName" : {
            "type" : "string"
          },
          "jti" : {
            "type" : "string"
          },
          "uid" : {
            "type" : "string"
          },
          "groups" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "Err" : {
        "type" : "object",
        "properties" : {
          "errorCode" : {
            "type" : "string"
          },
          "errorTag" : {
            "type" : "string"
          },
          "errorDesc" : {
            "type" : "string"
          },
          "args" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          }
        },
        "description" : "The optional error list"
      },
      "HttpHeaders" : {
        "type" : "object",
        "properties" : {
          "empty" : {
            "type" : "boolean"
          },
          "all" : {
            "$ref" : "#/components/schemas/HttpHeaders"
          }
        }
      },
      "HttpMethod" : {
        "type" : "object"
      },
      "HttpResponseStatus" : {
        "type" : "object"
      },
      "Level" : {
        "type" : "object",
        "properties" : {
          "standardLevel" : {
            "type" : "string",
            "enum" : [ "OFF", "FATAL", "ERROR", "WARN", "INFO", "DEBUG", "TRACE", "ALL" ]
          }
        }
      },
      "LogSettings" : {
        "type" : "object",
        "properties" : {
          "logRequestHeader" : {
            "type" : "boolean"
          },
          "logRequestBody" : {
            "type" : "boolean"
          },
          "logResponseHeader" : {
            "type" : "boolean"
          },
          "logResponseBody" : {
            "type" : "boolean"
          },
          "protectDataFieldsFromLogging" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "Memo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "desc" : {
            "type" : "string"
          }
        }
      },
      "POI" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "ts" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "ProcessorSettings" : {
        "type" : "object",
        "properties" : {
          "httpServiceResponseHeaderName_ServerTimestamp" : {
            "type" : "string"
          },
          "httpServiceResponseHeaderName_Reference" : {
            "type" : "string"
          },
          "logSettings" : {
            "$ref" : "#/components/schemas/LogSettings"
          }
        }
      },
      "ResponseEncoder" : {
        "type" : "object"
      },
      "ServiceError" : {
        "required" : [ "ref" ],
        "type" : "object",
        "properties" : {
          "ref" : {
            "type" : "string",
            "description" : "The index of requests received by current server since start"
          },
          "errors" : {
            "type" : "array",
            "description" : "The optional error list",
            "items" : {
              "$ref" : "#/components/schemas/Err"
            }
          }
        }
      },
      "SessionContext" : {
        "type" : "object",
        "properties" : {
          "localIP" : {
            "type" : "object"
          },
          "remoteIP" : {
            "type" : "object"
          },
          "protocol" : {
            "type" : "string"
          },
          "requestMethod" : {
            "$ref" : "#/components/schemas/HttpMethod"
          },
          "requestURI" : {
            "type" : "string"
          },
          "requestHeaders" : {
            "$ref" : "#/components/schemas/HttpHeaders"
          },
          "requestBody" : {
            "type" : "string"
          },
          "txId" : {
            "type" : "string"
          },
          "hit" : {
            "type" : "integer",
            "format" : "int64"
          },
          "startTs" : {
            "type" : "integer",
            "format" : "int64"
          },
          "startDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "caller" : {
            "$ref" : "#/components/schemas/Caller"
          },
          "callerId" : {
            "type" : "string"
          },
          "status" : {
            "$ref" : "#/components/schemas/HttpResponseStatus"
          },
          "autoConvertBlank200To204" : {
            "type" : "boolean"
          },
          "responseHeaders" : {
            "$ref" : "#/components/schemas/HttpHeaders"
          },
          "responseEncoder" : {
            "$ref" : "#/components/schemas/ResponseEncoder"
          },
          "contentType" : {
            "type" : "string"
          },
          "clientAcceptContentType" : {
            "type" : "string"
          },
          "charsetName" : {
            "type" : "string"
          },
          "data" : {
            "type" : "string",
            "format" : "byte"
          },
          "txt" : {
            "type" : "string"
          },
          "file" : {
            "type" : "string",
            "format" : "binary"
          },
          "downloadMode" : {
            "type" : "boolean"
          },
          "redirect" : {
            "type" : "string"
          },
          "poi" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/POI"
            }
          },
          "memo" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Memo"
            }
          },
          "sessionAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "processorSettings" : {
            "$ref" : "#/components/schemas/ProcessorSettings"
          },
          "serviceError" : {
            "$ref" : "#/components/schemas/ServiceError"
          },
          "cause" : {
            "type" : "object",
            "properties" : {
              "stackTrace" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "classLoaderName" : {
                      "type" : "string"
                    },
                    "moduleName" : {
                      "type" : "string"
                    },
                    "moduleVersion" : {
                      "type" : "string"
                    },
                    "methodName" : {
                      "type" : "string"
                    },
                    "fileName" : {
                      "type" : "string"
                    },
                    "lineNumber" : {
                      "type" : "integer",
                      "format" : "int32"
                    },
                    "className" : {
                      "type" : "string"
                    },
                    "nativeMethod" : {
                      "type" : "boolean"
                    }
                  }
                }
              },
              "message" : {
                "type" : "string"
              },
              "localizedMessage" : {
                "type" : "string"
              }
            }
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "logRequestHeader" : {
            "type" : "boolean"
          },
          "logResponseHeader" : {
            "type" : "boolean"
          },
          "logRequestBody" : {
            "type" : "boolean"
          },
          "logResponseBody" : {
            "type" : "boolean"
          }
        }
      },
      "JsonNode" : {
        "type" : "object"
      }
    }
  }
}