<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="REST API Performance Test" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group - REST Example" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">0</stringProp>
        <longProp name="ThreadGroup.start_time">1517629319000</longProp>
        <longProp name="ThreadGroup.end_time">1517629319000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="server" elementType="Argument">
              <stringProp name="Argument.name">server</stringProp>
              <stringProp name="Argument.value">${__P(server)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${__P(server)}</stringProp>
            </elementProp>
            <elementProp name="port" elementType="Argument">
              <stringProp name="Argument.name">port</stringProp>
              <stringProp name="Argument.value">${__P(port)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${__P(port)}</stringProp>
            </elementProp>
            <elementProp name="jwt" elementType="Argument">
              <stringProp name="Argument.name">jwt</stringProp>
              <stringProp name="Argument.value">ldsfjasdflialfia.sdlfjalsdfk.fielafjlasiefil</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="context-root" elementType="Argument">
              <stringProp name="Argument.name">context-root</stringProp>
              <stringProp name="Argument.value">/mockservice</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8211</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <KeystoreConfig guiclass="TestBeanGUI" testclass="KeystoreConfig" testname="Keystore Configuration" enabled="true">
          <stringProp name="preload">True</stringProp>
          <stringProp name="clientCertAliasVarName"></stringProp>
          <stringProp name="startIndex">0</stringProp>
          <stringProp name="endIndex">1</stringProp>
        </KeystoreConfig>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="lb ping" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">8211</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">mockservice/ping</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="lb ping" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">8311</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">mockservice/ping</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="lb ping" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">8211</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">hellosummer/ping</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="lb ping" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">8311</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">hellosummer/ping</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="lb ping" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${context-root}/ping</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="loadtest1" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${context-root}/loadtest?delayMilsec=123</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="loadtest2" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${context-root}/loadtest/123</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="user_login_JSON" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;username&quot; : &quot;!@#$%^&amp;*()_+-=[]\\{}|;&apos;:\&quot;,./&lt;&gt;?&quot;,&#xd;
  &quot;password&quot; : &quot; !@#$%^&amp;*()_+-=[]\\{}|;&apos;:\&quot;,./&lt;&gt;? &quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${context-root}/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="user_login_jSecurityCheck" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="j_username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">john</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">j_username</stringProp>
              </elementProp>
              <elementProp name="j_password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">aaas 的</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">j_password</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${context-root}/j_security_check</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="admin.version" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${context-root}/version</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${jwt}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="admin.inspection" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${context-root}/inspection</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${jwt}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="admin.status=pause" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${context-root}/status?pause=true</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${jwt}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="admin.status=resume" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${context-root}/status?pause=false</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${jwt}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="user_logout" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${context-root}/logout</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${jwt}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Mock JWT_large_Header" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">myid</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">id</stringProp>
              </elementProp>
              <elementProp name="issuer" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">myissuer</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">issuer</stringProp>
              </elementProp>
              <elementProp name="subject" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">mysubject</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subject</stringProp>
              </elementProp>
              <elementProp name="audience" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">myaudience</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">audience</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${context-root}/jwt/10</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">ss</stringProp>
                <stringProp name="Header.value">eyJhbGciOiJSUzUxMiJ9.eyJqdGkiOiJteWlkIiwiaXNzIjoibXlpc3N1ZXIiLCJzdWIiOiJteXN1YmplY3QiLCJhdWQiOiJteWF1ZGllbmNlIiwiZXhwIjoxNzA2ODM4NTE5LCJpYXQiOjE3MDY4Mzc5MTl9.O6DiurYry5YckbNFn4ihhb5sPnnRU-_3TGXbRxWwOzzeG7jlqsmX6TH_AUBf59JyTDQMAX9pEdBI1obiW9uzKAhVvjLtVHsAgIUqy8eNnGXYbt86vulYhzoeYe-fd3YfLyVW8Nt_N7BudY-TTTbpCkh6uO2rL46H031mehL2wyHnp38R8YdAW2qcYlgrTawhfRs_I9lm3JCpnAJrkTESC6RrFjKs2yZZ_UInZ2L1gPxOA3f_r7YmUpevnhloukRWYU7LrCzVIZuvGMIMvWvnDvYDL8rgHEOGKrnOde60j_HXvdQ848hzK2De0R_fS8X-gEH7eJr2P1SalvH0yIHhuWotWylq7SlxxDwgPqCVXFrHynUnL4MMKe90Ucg7y_rCoQ60cfuMGPwsNYD4qzaEWY_OFq98WJ2rlCvfZVoTdVpQQq6NS2a8DlJzshV9hZBOoCTUPtfV3kiDUQdRJcNpJu1hha10EhWWhXSSo_z4xKtvjEG3zo0zQt-1XoPyGjc6VUF15QH9mT3DYpvC74EzDs__T4UyLRgZAAUOW30fpACbOCIUNbekDYmSAF4nPVBzVIN9XBeBbMiYkxZISnpAcpMADx9aMGhV2gd4zyJEeYfzE7cSRXpHFQ_WpoG2gcLx4kPmotMp3Qxz6ZvBIvULlAjyRhrGjXvCJjgOCGD9QVQ</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sss</stringProp>
                <stringProp name="Header.value">eyJhbGciOiJSUzUxMiJ9.eyJqdGkiOiJteWlkIiwiaXNzIjoibXlpc3N1ZXIiLCJzdWIiOiJteXN1YmplY3QiLCJhdWQiOiJteWF1ZGllbmNlIiwiZXhwIjoxNzA2ODM4NTE5LCJpYXQiOjE3MDY4Mzc5MTl9.O6DiurYry5YckbNFn4ihhb5sPnnRU-_3TGXbRxWwOzzeG7jlqsmX6TH_AUBf59JyTDQMAX9pEdBI1obiW9uzKAhVvjLtVHsAgIUqy8eNnGXYbt86vulYhzoeYe-fd3YfLyVW8Nt_N7BudY-TTTbpCkh6uO2rL46H031mehL2wyHnp38R8YdAW2qcYlgrTawhfRs_I9lm3JCpnAJrkTESC6RrFjKs2yZZ_UInZ2L1gPxOA3f_r7YmUpevnhloukRWYU7LrCzVIZuvGMIMvWvnDvYDL8rgHEOGKrnOde60j_HXvdQ848hzK2De0R_fS8X-gEH7eJr2P1SalvH0yIHhuWotWylq7SlxxDwgPqCVXFrHynUnL4MMKe90Ucg7y_rCoQ60cfuMGPwsNYD4qzaEWY_OFq98WJ2rlCvfZVoTdVpQQq6NS2a8DlJzshV9hZBOoCTUPtfV3kiDUQdRJcNpJu1hha10EhWWhXSSo_z4xKtvjEG3zo0zQt-1XoPyGjc6VUF15QH9mT3DYpvC74EzDs__T4UyLRgZAAUOW30fpACbOCIUNbekDYmSAF4nPVBzVIN9XBeBbMiYkxZISnpAcpMADx9aMGhV2gd4zyJEeYfzE7cSRXpHFQ_WpoG2gcLx4kPmotMp3Qxz6ZvBIvULlAjyRhrGjXvCJjgOCGD9QVQ</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sfs</stringProp>
                <stringProp name="Header.value">eyJhbGciOiJSUzUxMiJ9.eyJqdGkiOiJteWlkIiwiaXNzIjoibXlpc3N1ZXIiLCJzdWIiOiJteXN1YmplY3QiLCJhdWQiOiJteWF1ZGllbmNlIiwiZXhwIjoxNzA2ODM4NTE5LCJpYXQiOjE3MDY4Mzc5MTl9.O6DiurYry5YckbNFn4ihhb5sPnnRU-_3TGXbRxWwOzzeG7jlqsmX6TH_AUBf59JyTDQMAX9pEdBI1obiW9uzKAhVvjLtVHsAgIUqy8eNnGXYbt86vulYhzoeYe-fd3YfLyVW8Nt_N7BudY-TTTbpCkh6uO2rL46H031mehL2wyHnp38R8YdAW2qcYlgrTawhfRs_I9lm3JCpnAJrkTESC6RrFjKs2yZZ_UInZ2L1gPxOA3f_r7YmUpevnhloukRWYU7LrCzVIZuvGMIMvWvnDvYDL8rgHEOGKrnOde60j_HXvdQ848hzK2De0R_fS8X-gEH7eJr2P1SalvH0yIHhuWotWylq7SlxxDwgPqCVXFrHynUnL4MMKe90Ucg7y_rCoQ60cfuMGPwsNYD4qzaEWY_OFq98WJ2rlCvfZVoTdVpQQq6NS2a8DlJzshV9hZBOoCTUPtfV3kiDUQdRJcNpJu1hha10EhWWhXSSo_z4xKtvjEG3zo0zQt-1XoPyGjc6VUF15QH9mT3DYpvC74EzDs__T4UyLRgZAAUOW30fpACbOCIUNbekDYmSAF4nPVBzVIN9XBeBbMiYkxZISnpAcpMADx9aMGhV2gd4zyJEeYfzE7cSRXpHFQ_WpoG2gcLx4kPmotMp3Qxz6ZvBIvULlAjyRhrGjXvCJjgOCGD9QVQeyJhbGciOiJSUzUxMiJ9.eyJqdGkiOiJteWlkIiwiaXNzIjoibXlpc3N1ZXIiLCJzdWIiOiJteXN1YmplY3QiLCJhdWQiOiJteWF1ZGllbmNlIiwiZXhwIjoxNzA2ODM4NTE5LCJpYXQiOjE3MDY4Mzc5MTl9.O6DiurYry5YckbNFn4ihhb5sPnnRU-_3TGXbRxWwOzzeG7jlqsmX6TH_AUBf59JyTDQMAX9pEdBI1obiW9uzKAhVvjLtVHsAgIUqy8eNnGXYbt86vulYhzoeYe-fd3YfLyVW8Nt_N7BudY-TTTbpCkh6uO2rL46H031mehL2wyHnp38R8YdAW2qcYlgrTawhfRs_I9lm3JCpnAJrkTESC6RrFjKs2yZZ_UInZ2L1gPxOA3f_r7YmUpevnhloukRWYU7LrCzVIZuvGMIMvWvnDvYDL8rgHEOGKrnOde60j_HXvdQ848hzK2De0R_fS8X-gEH7eJr2P1SalvH0yIHhuWotWylq7SlxxDwgPqCVXFrHynUnL4MMKe90Ucg7y_rCoQ60cfuMGPwsNYD4qzaEWY_OFq98WJ2rlCvfZVoTdVpQQq6NS2a8DlJzshV9hZBOoCTUPtfV3kiDUQdRJcNpJu1hha10EhWWhXSSo_z4xKtvjEG3zo0zQt-1XoPyGjc6VUF15QH9mT3DYpvC74EzDs__T4UyLRgZAAUOW30fpACbOCIUNbekDYmSAF4nPVBzVIN9XBeBbMiYkxZISnpAcpMADx9aMGhV2gd4zyJEeYfzE7cSRXpHFQ_WpoG2gcLx4kPmotMp3Qxz6ZvBIvULlAjyRhrGjXvCJjgOCGD9QVQeyJhbGciOiJSUzUxMiJ9.eyJqdGkiOiJteWlkIiwiaXNzIjoibXlpc3N1ZXIiLCJzdWIiOiJteXN1YmplY3QiLCJhdWQiOiJteWF1ZGllbmNlIiwiZXhwIjoxNzA2ODM4NTE5LCJpYXQiOjE3MDY4Mzc5MTl9.O6DiurYry5YckbNFn4ihhb5sPnnRU-_3TGXbRxWwOzzeG7jlqsmX6TH_AUBf59JyTDQMAX9pEdBI1obiW9uzKAhVvjLtVHsAgIUqy8eNnGXYbt86vulYhzoeYe-fd3YfLyVW8Nt_N7BudY-TTTbpCkh6uO2rL46H031mehL2wyHnp38R8YdAW2qcYlgrTawhfRs_I9lm3JCpnAJrkTESC6RrFjKs2yZZ_UInZ2L1gPxOA3f_r7YmUpevnhloukRWYU7LrCzVIZuvGMIMvWvnDvYDL8rgHEOGKrnOde60j_HXvdQ848hzK2De0R_fS8X-gEH7eJr2P1SalvH0yIHhuWotWylq7SlxxDwgPqCVXFrHynUnL4MMKe90Ucg7y_rCoQ60cfuMGPwsNYD4qzaEWY_OFq98WJ2rlCvfZVoTdVpQQq6NS2a8DlJzshV9hZBOoCTUPtfV3kiDUQdRJcNpJu1hha10EhWWhXSSo_z4xKtvjEG3zo0zQt-1XoPyGjc6VUF15QH9mT3DYpvC74EzDs__T4UyLRgZAAUOW30fpACbOCIUNbekDYmSAF4nPVBzVIN9XBeBbMiYkxZISnpAcpMADx9aMGhV2gd4zyJEeYfzE7cSRXpHFQ_WpoG2gcLx4kPmotMp3Qxz6ZvBIvULlAjyRhrGjXvCJjgOCGD9QVQeyJhbGciOiJSUzUxMiJ9.eyJqdGkiOiJteWlkIiwiaXNzIjoibXlpc3N1ZXIiLCJzdWIiOiJteXN1YmplY3QiLCJhdWQiOiJteWF1ZGllbmNlIiwiZXhwIjoxNzA2ODM4NTE5LCJpYXQiOjE3MDY4Mzc5MTl9.O6DiurYry5YckbNFn4ihhb5sPnnRU-_3TGXbRxWwOzzeG7jlqsmX6TH_AUBf59JyTDQMAX9pEdBI1obiW9uzKAhVvjLtVHsAgIUqy8eNnGXYbt86vulYhzoeYe-fd3YfLyVW8Nt_N7BudY-TTTbpCkh6uO2rL46H031mehL2wyHnp38R8YdAW2qcYlgrTawhfRs_I9lm3JCpnAJrkTESC6RrFjKs2yZZ_UInZ2L1gPxOA3f_r7YmUpevnhloukRWYU7LrCzVIZuvGMIMvWvnDvYDL8rgHEOGKrnOde60j_HXvdQ848hzK2De0R_fS8X-gEH7eJr2P1SalvH0yIHhuWotWylq7SlxxDwgPqCVXFrHynUnL4MMKe90Ucg7y_rCoQ60cfuMGPwsNYD4qzaEWY_OFq98WJ2rlCvfZVoTdVpQQq6NS2a8DlJzshV9hZBOoCTUPtfV3kiDUQdRJcNpJu1hha10EhWWhXSSo_z4xKtvjEG3zo0zQt-1XoPyGjc6VUF15QH9mT3DYpvC74EzDs__T4UyLRgZAAUOW30fpACbOCIUNbekDYmSAF4nPVBzVIN9XBeBbMiYkxZISnpAcpMADx9aMGhV2gd4zyJEeYfzE7cSRXpHFQ_WpoG2gcLx4kPmotMp3Qxz6ZvBIvULlAjyRhrGjXvCJjgOCGD9QVQeyJhbGciOiJSUzUxMiJ9.eyJqdGkiOiJteWlkIiwiaXNzIjoibXlpc3N1ZXIiLCJzdWIiOiJteXN1YmplY3QiLCJhdWQiOiJteWF1ZGllbmNlIiwiZXhwIjoxNzA2ODM4NTE5LCJpYXQiOjE3MDY4Mzc5MTl9.O6DiurYry5YckbNFn4ihhb5sPnnRU-_3TGXbRxWwOzzeG7jlqsmX6TH_AUBf59JyTDQMAX9pEdBI1obiW9uzKAhVvjLtVHsAgIUqy8eNnGXYbt86vulYhzoeYe-fd3YfLyVW8Nt_N7BudY-TTTbpCkh6uO2rL46H031mehL2wyHnp38R8YdAW2qcYlgrTawhfRs_I9lm3JCpnAJrkTESC6RrFjKs2yZZ_UInZ2L1gPxOA3f_r7YmUpevnhloukRWYU7LrCzVIZuvGMIMvWvnDvYDL8rgHEOGKrnOde60j_HXvdQ848hzK2De0R_fS8X-gEH7eJr2P1SalvH0yIHhuWotWylq7SlxxDwgPqCVXFrHynUnL4MMKe90Ucg7y_rCoQ60cfuMGPwsNYD4qzaEWY_OFq98WJ2rlCvfZVoTdVpQQq6NS2a8DlJzshV9hZBOoCTUPtfV3kiDUQdRJcNpJu1hha10EhWWhXSSo_z4xKtvjEG3zo0zQt-1XoPyGjc6VUF15QH9mT3DYpvC74EzDs__T4UyLRgZAAUOW30fpACbOCIUNbekDYmSAF4nPVBzVIN9XBeBbMiYkxZISnpAcpMADx9aMGhV2gd4zyJEeYfzE7cSRXpHFQ_WpoG2gcLx4kPmotMp3Qxz6ZvBIvULlAjyRhrGjXvCJjgOCGD9QVQeyJhbGciOiJSUzUxMiJ9.eyJqdGkiOiJteWlkIiwiaXNzIjoibXlpc3N1ZXIiLCJzdWIiOiJteXN1YmplY3QiLCJhdWQiOiJteWF1ZGllbmNlIiwiZXhwIjoxNzA2ODM4NTE5LCJpYXQiOjE3MDY4Mzc5MTl9.O6DiurYry5YckbNFn4ihhb5sPnnRU-_3TGXbRxWwOzzeG7jlqsmX6TH_AUBf59JyTDQMAX9pEdBI1obiW9uzKAhVvjLtVHsAgIUqy8eNnGXYbt86vulYhzoeYe-fd3YfLyVW8Nt_N7BudY-TTTbpCkh6uO2rL46H031mehL2wyHnp38R8YdAW2qcYlgrTawhfRs_I9lm3JCpnAJrkTESC6RrFjKs2yZZ_UInZ2L1gPxOA3f_r7YmUpevnhloukRWYU7LrCzVIZuvGMIMvWvnDvYDL8rgHEOGKrnOde60j_HXvdQ848hzK2De0R_fS8X-gEH7eJr2P1SalvH0yIHhuWotWylq7SlxxDwgPqCVXFrHynUnL4MMKe90Ucg7y_rCoQ60cfuMGPwsNYD4qzaEWY_OFq98WJ2rlCvfZVoTdVpQQq6NS2a8DlJzshV9hZBOoCTUPtfV3kiDUQdRJcNpJu1hha10EhWWhXSSo_z4xKtvjEG3zo0zQt-1XoPyGjc6VUF15QH9mT3DYpvC74EzDs__T4UyLRgZAAUOW30fpACbOCIUNbekDYmSAF4nPVBzVIN9XBeBbMiYkxZISnpAcpMADx9aMGhV2gd4zyJEeYfzE7cSRXpHFQ_WpoG2gcLx4kPmotMp3Qxz6ZvBIvULlAjyRhrGjXvCJjgOCGD9QVQeyJhbGciOiJSUzUxMiJ9.eyJqdGkiOiJteWlkIiwiaXNzIjoibXlpc3N1ZXIiLCJzdWIiOiJteXN1YmplY3QiLCJhdWQiOiJteWF1ZGllbmNlIiwiZXhwIjoxNzA2ODM4NTE5LCJpYXQiOjE3MDY4Mzc5MTl9.O6DiurYry5YckbNFn4ihhb5sPnnRU-_3TGXbRxWwOzzeG7jlqsmX6TH_AUBf59JyTDQMAX9pEdBI1obiW9uzKAhVvjLtVHsAgIUqy8eNnGXYbt86vulYhzoeYe-fd3YfLyVW8Nt_N7BudY-TTTbpCkh6uO2rL46H031mehL2wyHnp38R8YdAW2qcYlgrTawhfRs_I9lm3JCpnAJrkTESC6RrFjKs2yZZ_UInZ2L1gPxOA3f_r7YmUpevnhloukRWYU7LrCzVIZuvGMIMvWvnDvYDL8rgHEOGKrnOde60j_HXvdQ848hzK2De0R_fS8X-gEH7eJr2P1SalvH0yIHhuWotWylq7SlxxDwgPqCVXFrHynUnL4MMKe90Ucg7y_rCoQ60cfuMGPwsNYD4qzaEWY_OFq98WJ2rlCvfZVoTdVpQQq6NS2a8DlJzshV9hZBOoCTUPtfV3kiDUQdRJcNpJu1hha10EhWWhXSSo_z4xKtvjEG3zo0zQt-1XoPyGjc6VUF15QH9mT3DYpvC74EzDs__T4UyLRgZAAUOW30fpACbOCIUNbekDYmSAF4nPVBzVIN9XBeBbMiYkxZISnpAcpMADx9aMGhV2gd4zyJEeYfzE7cSRXpHFQ_WpoG2gcLx4kPmotMp3Qxz6ZvBIvULlAjyRhrGjXvCJjgOCGD9QVQ</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sdf</stringProp>
                <stringProp name="Header.value">eyJhbGciOiJSUzUxMiJ9.eyJqdGkiOiJteWlkIiwiaXNzIjoibXlpc3N1ZXIiLCJzdWIiOiJteXN1YmplY3QiLCJhdWQiOiJteWF1ZGllbmNlIiwiZXhwIjoxNzA2ODM4NTE5LCJpYXQiOjE3MDY4Mzc5MTl9.O6DiurYry5YckbNFn4ihhb5sPnnRU-_3TGXbRxWwOzzeG7jlqsmX6TH_AUBf59JyTDQMAX9pEdBI1obiW9uzKAhVvjLtVHsAgIUqy8eNnGXYbt86vulYhzoeYe-fd3YfLyVW8Nt_N7BudY-TTTbpCkh6uO2rL46H031mehL2wyHnp38R8YdAW2qcYlgrTawhfRs_I9lm3JCpnAJrkTESC6RrFjKs2yZZ_UInZ2L1gPxOA3f_r7YmUpevnhloukRWYU7LrCzVIZuvGMIMvWvnDvYDL8rgHEOGKrnOde60j_HXvdQ848hzK2De0R_fS8X-gEH7eJr2P1SalvH0yIHhuWotWylq7SlxxDwgPqCVXFrHynUnL4MMKe90Ucg7y_rCoQ60cfuMGPwsNYD4qzaEWY_OFq98WJ2rlCvfZVoTdVpQQq6NS2a8DlJzshV9hZBOoCTUPtfV3kiDUQdRJcNpJu1hha10EhWWhXSSo_z4xKtvjEG3zo0zQt-1XoPyGjc6VUF15QH9mT3DYpvC74EzDs__T4UyLRgZAAUOW30fpACbOCIUNbekDYmSAF4nPVBzVIN9XBeBbMiYkxZISnpAcpMADx9aMGhV2gd4zyJEeYfzE7cSRXpHFQ_WpoG2gcLx4kPmotMp3Qxz6ZvBIvULlAjyRhrGjXvCJjgOCGD9QVQeyJhbGciOiJSUzUxMiJ9.eyJqdGkiOiJteWlkIiwiaXNzIjoibXlpc3N1ZXIiLCJzdWIiOiJteXN1YmplY3QiLCJhdWQiOiJteWF1ZGllbmNlIiwiZXhwIjoxNzA2ODM4NTE5LCJpYXQiOjE3MDY4Mzc5MTl9.O6DiurYry5YckbNFn4ihhb5sPnnRU-_3TGXbRxWwOzzeG7jlqsmX6TH_AUBf59JyTDQMAX9pEdBI1obiW9uzKAhVvjLtVHsAgIUqy8eNnGXYbt86vulYhzoeYe-fd3YfLyVW8Nt_N7BudY-TTTbpCkh6uO2rL46H031mehL2wyHnp38R8YdAW2qcYlgrTawhfRs_I9lm3JCpnAJrkTESC6RrFjKs2yZZ_UInZ2L1gPxOA3f_r7YmUpevnhloukRWYU7LrCzVIZuvGMIMvWvnDvYDL8rgHEOGKrnOde60j_HXvdQ848hzK2De0R_fS8X-gEH7eJr2P1SalvH0yIHhuWotWylq7SlxxDwgPqCVXFrHynUnL4MMKe90Ucg7y_rCoQ60cfuMGPwsNYD4qzaEWY_OFq98WJ2rlCvfZVoTdVpQQq6NS2a8DlJzshV9hZBOoCTUPtfV3kiDUQdRJcNpJu1hha10EhWWhXSSo_z4xKtvjEG3zo0zQt-1XoPyGjc6VUF15QH9mT3DYpvC74EzDs__T4UyLRgZAAUOW30fpACbOCIUNbekDYmSAF4nPVBzVIN9XBeBbMiYkxZISnpAcpMADx9aMGhV2gd4zyJEeYfzE7cSRXpHFQ_WpoG2gcLx4kPmotMp3Qxz6ZvBIvULlAjyRhrGjXvCJjgOCGD9QVQeyJhbGciOiJSUzUxMiJ9.eyJqdGkiOiJteWlkIiwiaXNzIjoibXlpc3N1ZXIiLCJzdWIiOiJteXN1YmplY3QiLCJhdWQiOiJteWF1ZGllbmNlIiwiZXhwIjoxNzA2ODM4NTE5LCJpYXQiOjE3MDY4Mzc5MTl9.O6DiurYry5YckbNFn4ihhb5sPnnRU-_3TGXbRxWwOzzeG7jlqsmX6TH_AUBf59JyTDQMAX9pEdBI1obiW9uzKAhVvjLtVHsAgIUqy8eNnGXYbt86vulYhzoeYe-fd3YfLyVW8Nt_N7BudY-TTTbpCkh6uO2rL46H031mehL2wyHnp38R8YdAW2qcYlgrTawhfRs_I9lm3JCpnAJrkTESC6RrFjKs2yZZ_UInZ2L1gPxOA3f_r7YmUpevnhloukRWYU7LrCzVIZuvGMIMvWvnDvYDL8rgHEOGKrnOde60j_HXvdQ848hzK2De0R_fS8X-gEH7eJr2P1SalvH0yIHhuWotWylq7SlxxDwgPqCVXFrHynUnL4MMKe90Ucg7y_rCoQ60cfuMGPwsNYD4qzaEWY_OFq98WJ2rlCvfZVoTdVpQQq6NS2a8DlJzshV9hZBOoCTUPtfV3kiDUQdRJcNpJu1hha10EhWWhXSSo_z4xKtvjEG3zo0zQt-1XoPyGjc6VUF15QH9mT3DYpvC74EzDs__T4UyLRgZAAUOW30fpACbOCIUNbekDYmSAF4nPVBzVIN9XBeBbMiYkxZISnpAcpMADx9aMGhV2gd4zyJEeYfzE7cSRXpHFQ_WpoG2gcLx4kPmotMp3Qxz6ZvBIvULlAjyRhrGjXvCJjgOCGD9QVQeyJhbGciOiJSUzUxMiJ9.eyJqdGkiOiJteWlkIiwiaXNzIjoibXlpc3N1ZXIiLCJzdWIiOiJteXN1YmplY3QiLCJhdWQiOiJteWF1ZGllbmNlIiwiZXhwIjoxNzA2ODM4NTE5LCJpYXQiOjE3MDY4Mzc5MTl9.O6DiurYry5YckbNFn4ihhb5sPnnRU-_3TGXbRxWwOzzeG7jlqsmX6TH_AUBf59JyTDQMAX9pEdBI1obiW9uzKAhVvjLtVHsAgIUqy8eNnGXYbt86vulYhzoeYe-fd3YfLyVW8Nt_N7BudY-TTTbpCkh6uO2rL46H031mehL2wyHnp38R8YdAW2qcYlgrTawhfRs_I9lm3JCpnAJrkTESC6RrFjKs2yZZ_UInZ2L1gPxOA3f_r7YmUpevnhloukRWYU7LrCzVIZuvGMIMvWvnDvYDL8rgHEOGKrnOde60j_HXvdQ848hzK2De0R_fS8X-gEH7eJr2P1SalvH0yIHhuWotWylq7SlxxDwgPqCVXFrHynUnL4MMKe90Ucg7y_rCoQ60cfuMGPwsNYD4qzaEWY_OFq98WJ2rlCvfZVoTdVpQQq6NS2a8DlJzshV9hZBOoCTUPtfV3kiDUQdRJcNpJu1hha10EhWWhXSSo_z4xKtvjEG3zo0zQt-1XoPyGjc6VUF15QH9mT3DYpvC74EzDs__T4UyLRgZAAUOW30fpACbOCIUNbekDYmSAF4nPVBzVIN9XBeBbMiYkxZISnpAcpMADx9aMGhV2gd4zyJEeYfzE7cSRXpHFQ_WpoG2gcLx4kPmotMp3Qxz6ZvBIvULlAjyRhrGjXvCJjgOCGD9QVQeyJhbGciOiJSUzUxMiJ9.eyJqdGkiOiJteWlkIiwiaXNzIjoibXlpc3N1ZXIiLCJzdWIiOiJteXN1YmplY3QiLCJhdWQiOiJteWF1ZGllbmNlIiwiZXhwIjoxNzA2ODM4NTE5LCJpYXQiOjE3MDY4Mzc5MTl9.O6DiurYry5YckbNFn4ihhb5sPnnRU-_3TGXbRxWwOzzeG7jlqsmX6TH_AUBf59JyTDQMAX9pEdBI1obiW9uzKAhVvjLtVHsAgIUqy8eNnGXYbt86vulYhzoeYe-fd3YfLyVW8Nt_N7BudY-TTTbpCkh6uO2rL46H031mehL2wyHnp38R8YdAW2qcYlgrTawhfRs_I9lm3JCpnAJrkTESC6RrFjKs2yZZ_UInZ2L1gPxOA3f_r7YmUpevnhloukRWYU7LrCzVIZuvGMIMvWvnDvYDL8rgHEOGKrnOde60j_HXvdQ848hzK2De0R_fS8X-gEH7eJr2P1SalvH0yIHhuWotWylq7SlxxDwgPqCVXFrHynUnL4MMKe90Ucg7y_rCoQ60cfuMGPwsNYD4qzaEWY_OFq98WJ2rlCvfZVoTdVpQQq6NS2a8DlJzshV9hZBOoCTUPtfV3kiDUQdRJcNpJu1hha10EhWWhXSSo_z4xKtvjEG3zo0zQt-1XoPyGjc6VUF15QH9mT3DYpvC74EzDs__T4UyLRgZAAUOW30fpACbOCIUNbekDYmSAF4nPVBzVIN9XBeBbMiYkxZISnpAcpMADx9aMGhV2gd4zyJEeYfzE7cSRXpHFQ_WpoG2gcLx4kPmotMp3Qxz6ZvBIvULlAjyRhrGjXvCJjgOCGD9QVQeyJhbGciOiJSUzUxMiJ9.eyJqdGkiOiJteWlkIiwiaXNzIjoibXlpc3N1ZXIiLCJzdWIiOiJteXN1YmplY3QiLCJhdWQiOiJteWF1ZGllbmNlIiwiZXhwIjoxNzA2ODM4NTE5LCJpYXQiOjE3MDY4Mzc5MTl9.O6DiurYry5YckbNFn4ihhb5sPnnRU-_3TGXbRxWwOzzeG7jlqsmX6TH_AUBf59JyTDQMAX9pEdBI1obiW9uzKAhVvjLtVHsAgIUqy8eNnGXYbt86vulYhzoeYe-fd3YfLyVW8Nt_N7BudY-TTTbpCkh6uO2rL46H031mehL2wyHnp38R8YdAW2qcYlgrTawhfRs_I9lm3JCpnAJrkTESC6RrFjKs2yZZ_UInZ2L1gPxOA3f_r7YmUpevnhloukRWYU7LrCzVIZuvGMIMvWvnDvYDL8rgHEOGKrnOde60j_HXvdQ848hzK2De0R_fS8X-gEH7eJr2P1SalvH0yIHhuWotWylq7SlxxDwgPqCVXFrHynUnL4MMKe90Ucg7y_rCoQ60cfuMGPwsNYD4qzaEWY_OFq98WJ2rlCvfZVoTdVpQQq6NS2a8DlJzshV9hZBOoCTUPtfV3kiDUQdRJcNpJu1hha10EhWWhXSSo_z4xKtvjEG3zo0zQt-1XoPyGjc6VUF15QH9mT3DYpvC74EzDs__T4UyLRgZAAUOW30fpACbOCIUNbekDYmSAF4nPVBzVIN9XBeBbMiYkxZISnpAcpMADx9aMGhV2gd4zyJEeYfzE7cSRXpHFQ_WpoG2gcLx4kPmotMp3Qxz6ZvBIvULlAjyRhrGjXvCJjgOCGD9QVQeyJhbGciOiJSUzUxMiJ9.eyJqdGkiOiJteWlkIiwiaXNzIjoibXlpc3N1ZXIiLCJzdWIiOiJteXN1YmplY3QiLCJhdWQiOiJteWF1ZGllbmNlIiwiZXhwIjoxNzA2ODM4NTE5LCJpYXQiOjE3MDY4Mzc5MTl9.O6DiurYry5YckbNFn4ihhb5sPnnRU-_3TGXbRxWwOzzeG7jlqsmX6TH_AUBf59JyTDQMAX9pEdBI1obiW9uzKAhVvjLtVHsAgIUqy8eNnGXYbt86vulYhzoeYe-fd3YfLyVW8Nt_N7BudY-TTTbpCkh6uO2rL46H031mehL2wyHnp38R8YdAW2qcYlgrTawhfRs_I9lm3JCpnAJrkTESC6RrFjKs2yZZ_UInZ2L1gPxOA3f_r7YmUpevnhloukRWYU7LrCzVIZuvGMIMvWvnDvYDL8rgHEOGKrnOde60j_HXvdQ848hzK2De0R_fS8X-gEH7eJr2P1SalvH0yIHhuWotWylq7SlxxDwgPqCVXFrHynUnL4MMKe90Ucg7y_rCoQ60cfuMGPwsNYD4qzaEWY_OFq98WJ2rlCvfZVoTdVpQQq6NS2a8DlJzshV9hZBOoCTUPtfV3kiDUQdRJcNpJu1hha10EhWWhXSSo_z4xKtvjEG3zo0zQt-1XoPyGjc6VUF15QH9mT3DYpvC74EzDs__T4UyLRgZAAUOW30fpACbOCIUNbekDYmSAF4nPVBzVIN9XBeBbMiYkxZISnpAcpMADx9aMGhV2gd4zyJEeYfzE7cSRXpHFQ_WpoG2gcLx4kPmotMp3Qxz6ZvBIvULlAjyRhrGjXvCJjgOCGD9QVQeyJhbGciOiJSUzUxMiJ9.eyJqdGkiOiJteWlkIiwiaXNzIjoibXlpc3N1ZXIiLCJzdWIiOiJteXN1YmplY3QiLCJhdWQiOiJteWF1ZGllbmNlIiwiZXhwIjoxNzA2ODM4NTE5LCJpYXQiOjE3MDY4Mzc5MTl9.O6DiurYry5YckbNFn4ihhb5sPnnRU-_3TGXbRxWwOzzeG7jlqsmX6TH_AUBf59JyTDQMAX9pEdBI1obiW9uzKAhVvjLtVHsAgIUqy8eNnGXYbt86vulYhzoeYe-fd3YfLyVW8Nt_N7BudY-TTTbpCkh6uO2rL46H031mehL2wyHnp38R8YdAW2qcYlgrTawhfRs_I9lm3JCpnAJrkTESC6RrFjKs2yZZ_UInZ2L1gPxOA3f_r7YmUpevnhloukRWYU7LrCzVIZuvGMIMvWvnDvYDL8rgHEOGKrnOde60j_HXvdQ848hzK2De0R_fS8X-gEH7eJr2P1SalvH0yIHhuWotWylq7SlxxDwgPqCVXFrHynUnL4MMKe90Ucg7y_rCoQ60cfuMGPwsNYD4qzaEWY_OFq98WJ2rlCvfZVoTdVpQQq6NS2a8DlJzshV9hZBOoCTUPtfV3kiDUQdRJcNpJu1hha10EhWWhXSSo_z4xKtvjEG3zo0zQt-1XoPyGjc6VUF15QH9mT3DYpvC74EzDs__T4UyLRgZAAUOW30fpACbOCIUNbekDYmSAF4nPVBzVIN9XBeBbMiYkxZISnpAcpMADx9aMGhV2gd4zyJEeYfzE7cSRXpHFQ_WpoG2gcLx4kPmotMp3Qxz6ZvBIvULlAjyRhrGjXvCJjgOCGD9QVQeyJhbGciOiJSUzUxMiJ9.eyJqdGkiOiJteWlkIiwiaXNzIjoibXlpc3N1ZXIiLCJzdWIiOiJteXN1YmplY3QiLCJhdWQiOiJteWF1ZGllbmNlIiwiZXhwIjoxNzA2ODM4NTE5LCJpYXQiOjE3MDY4Mzc5MTl9.O6DiurYry5YckbNFn4ihhb5sPnnRU-_3TGXbRxWwOzzeG7jlqsmX6TH_AUBf59JyTDQMAX9pEdBI1obiW9uzKAhVvjLtVHsAgIUqy8eNnGXYbt86vulYhzoeYe-fd3YfLyVW8Nt_N7BudY-TTTbpCkh6uO2rL46H031mehL2wyHnp38R8YdAW2qcYlgrTawhfRs_I9lm3JCpnAJrkTESC6RrFjKs2yZZ_UInZ2L1gPxOA3f_r7YmUpevnhloukRWYU7LrCzVIZuvGMIMvWvnDvYDL8rgHEOGKrnOde60j_HXvdQ848hzK2De0R_fS8X-gEH7eJr2P1SalvH0yIHhuWotWylq7SlxxDwgPqCVXFrHynUnL4MMKe90Ucg7y_rCoQ60cfuMGPwsNYD4qzaEWY_OFq98WJ2rlCvfZVoTdVpQQq6NS2a8DlJzshV9hZBOoCTUPtfV3kiDUQdRJcNpJu1hha10EhWWhXSSo_z4xKtvjEG3zo0zQt-1XoPyGjc6VUF15QH9mT3DYpvC74EzDs__T4UyLRgZAAUOW30fpACbOCIUNbekDYmSAF4nPVBzVIN9XBeBbMiYkxZISnpAcpMADx9aMGhV2gd4zyJEeYfzE7cSRXpHFQ_WpoG2gcLx4kPmotMp3Qxz6ZvBIvULlAjyRhrGjXvCJjgOCGD9QVQeyJhbGciOiJSUzUxMiJ9.eyJqdGkiOiJteWlkIiwiaXNzIjoibXlpc3N1ZXIiLCJzdWIiOiJteXN1YmplY3QiLCJhdWQiOiJteWF1ZGllbmNlIiwiZXhwIjoxNzA2ODM4NTE5LCJpYXQiOjE3MDY4Mzc5MTl9.O6DiurYry5YckbNFn4ihhb5sPnnRU-_3TGXbRxWwOzzeG7jlqsmX6TH_AUBf59JyTDQMAX9pEdBI1obiW9uzKAhVvjLtVHsAgIUqy8eNnGXYbt86vulYhzoeYe-fd3YfLyVW8Nt_N7BudY-TTTbpCkh6uO2rL46H031mehL2wyHnp38R8YdAW2qcYlgrTawhfRs_I9lm3JCpnAJrkTESC6RrFjKs2yZZ_UInZ2L1gPxOA3f_r7YmUpevnhloukRWYU7LrCzVIZuvGMIMvWvnDvYDL8rgHEOGKrnOde60j_HXvdQ848hzK2De0R_fS8X-gEH7eJr2P1SalvH0yIHhuWotWylq7SlxxDwgPqCVXFrHynUnL4MMKe90Ucg7y_rCoQ60cfuMGPwsNYD4qzaEWY_OFq98WJ2rlCvfZVoTdVpQQq6NS2a8DlJzshV9hZBOoCTUPtfV3kiDUQdRJcNpJu1hha10EhWWhXSSo_z4xKtvjEG3zo0zQt-1XoPyGjc6VUF15QH9mT3DYpvC74EzDs__T4UyLRgZAAUOW30fpACbOCIUNbekDYmSAF4nPVBzVIN9XBeBbMiYkxZISnpAcpMADx9aMGhV2gd4zyJEeYfzE7cSRXpHFQ_WpoG2gcLx4kPmotMp3Qxz6ZvBIvULlAjyRhrGjXvCJjgOCGD9QVQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Mock JWT" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">myid</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">id</stringProp>
              </elementProp>
              <elementProp name="issuer" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">myissuer</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">issuer</stringProp>
              </elementProp>
              <elementProp name="subject" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">mysubject</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subject</stringProp>
              </elementProp>
              <elementProp name="audience" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">myaudience</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">audience</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${context-root}/jwt/10</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Mock download" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">myid</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">id</stringProp>
              </elementProp>
              <elementProp name="issuer" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">myissuer</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">issuer</stringProp>
              </elementProp>
              <elementProp name="subject" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">mysubject</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subject</stringProp>
              </elementProp>
              <elementProp name="audience" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">myaudience</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">audience</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/file</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Mock post test" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;result&quot;:true, &quot;count&quot;:42}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">service1/action1?a=b b&amp;c c=d d&amp;ee=1?23&amp;key1=a b</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzUxMiJ9.eyJqdGkiOiIxMjM0NTYuMF9DaGFuZ3NraV8xNzA1NDQwNjkyOTQ2IiwiaXNzIjoiTEctTVJJUyIsInN1YiI6IkNoYW5nc2tpIiwiYXVkIjoiU3RvcmVVc2VycyIsImNhbGxlcklkIjowLCJ0ZW5hbnRJZCI6MTIzNDU2LCJ0ZW5hbnROYW1lIjoiQ2hhbmdza2lfc3RvcmUxIiwiZXhwIjoxNzA1NDQ0MjkyLCJpYXQiOjE3MDU0NDA2OTJ9.fV4whJZoShKOop0y-englyIdOHuDOsfQPGvtwMkO0b6BCZ9daadrIp0rPW-Pn-7Sua89RtbC9_d77HZNqF8mY8XZuBMBGfLXsNQ7GvEI5N-vvrHRqUZZjyeuzLZ0BsLLJMbgrEJHIZH8BvLLrCsEd3GzBUI5tEdbTddPIzh7FLuD-w6Z6rEMWbTlQbdRk_fpNSwmQhe9tKoZvCDUREXPyGXOiIUkP3mo6-ZAzRHW7mDkOl8jJGqFvoYC-755Hk-Z8giLehhKnAdTiMrSMQI5on8bVJ5AAmHPQMTZ48PVLSqiAlTHsdsIDng1G3szKX99XmGt4vphHYwcEq5q_rK3HkW86UwjML-FHiSDIiMTIFeKTPSRSOet9hkGKhSeyvm3vjZ9_xvqwnmbwoYJPL2GiCtYJ6GJAigScaSVAA76kjDOecQR6GsRZWABqCoR5YQUp3MR00HFUDLtl09e1GfoJ9GcRoQBX5YlNii8T42hmXh2YsdzJ_taJU5Y-59xHVK41uVn48fgLBJChjLqZfl7kD3INRoRNLnOPZHO_6VHez1nPZ9F40asZV5WxsHkBXvbCAAX2x7FxOEUAuAZyW4W58zbf0tlizqAM8QC8br5eboFiowWOkbGe8zYDADv8xLoLCU9ZxC1rAh7GvZ7k3DW6jCvWGFXNEQHABKPgostnRI</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Mock post" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;menu&quot;:{&#xd;
      &quot;id&quot;:&quot;file&quot;,&#xd;
      &quot;value&quot;:&quot;File&quot;,&#xd;
      &quot;popup&quot;:{&#xd;
         &quot;menuitem&quot;:[&#xd;
            {&#xd;
               &quot;value&quot;:&quot;New&quot;,&#xd;
               &quot;onclick&quot;:&quot;CreateNewDoc()&quot;&#xd;
            },&#xd;
            {&#xd;
               &quot;value&quot;:&quot;Open&quot;,&#xd;
               &quot;onclick&quot;:&quot;OpenDoc()&quot;&#xd;
            },&#xd;
            {&#xd;
               &quot;value&quot;:&quot;Close&quot;,&#xd;
               &quot;onclick&quot;:&quot;CloseDoc()&quot;&#xd;
            }&#xd;
         ]&#xd;
      }&#xd;
   }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">service1/action1</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzUxMiJ9.eyJqdGkiOiIxMjM0NTYuMF9DaGFuZ3NraV8xNzA1NDQwNjkyOTQ2IiwiaXNzIjoiTEctTVJJUyIsInN1YiI6IkNoYW5nc2tpIiwiYXVkIjoiU3RvcmVVc2VycyIsImNhbGxlcklkIjowLCJ0ZW5hbnRJZCI6MTIzNDU2LCJ0ZW5hbnROYW1lIjoiQ2hhbmdza2lfc3RvcmUxIiwiZXhwIjoxNzA1NDQ0MjkyLCJpYXQiOjE3MDU0NDA2OTJ9.fV4whJZoShKOop0y-englyIdOHuDOsfQPGvtwMkO0b6BCZ9daadrIp0rPW-Pn-7Sua89RtbC9_d77HZNqF8mY8XZuBMBGfLXsNQ7GvEI5N-vvrHRqUZZjyeuzLZ0BsLLJMbgrEJHIZH8BvLLrCsEd3GzBUI5tEdbTddPIzh7FLuD-w6Z6rEMWbTlQbdRk_fpNSwmQhe9tKoZvCDUREXPyGXOiIUkP3mo6-ZAzRHW7mDkOl8jJGqFvoYC-755Hk-Z8giLehhKnAdTiMrSMQI5on8bVJ5AAmHPQMTZ48PVLSqiAlTHsdsIDng1G3szKX99XmGt4vphHYwcEq5q_rK3HkW86UwjML-FHiSDIiMTIFeKTPSRSOet9hkGKhSeyvm3vjZ9_xvqwnmbwoYJPL2GiCtYJ6GJAigScaSVAA76kjDOecQR6GsRZWABqCoR5YQUp3MR00HFUDLtl09e1GfoJ9GcRoQBX5YlNii8T42hmXh2YsdzJ_taJU5Y-59xHVK41uVn48fgLBJChjLqZfl7kD3INRoRNLnOPZHO_6VHez1nPZ9F40asZV5WxsHkBXvbCAAX2x7FxOEUAuAZyW4W58zbf0tlizqAM8QC8br5eboFiowWOkbGe8zYDADv8xLoLCU9ZxC1rAh7GvZ7k3DW6jCvWGFXNEQHABKPgostnRI</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Mock get" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;menu&quot;:{&#xd;
      &quot;id&quot;:&quot;file&quot;,&#xd;
      &quot;value&quot;:&quot;File&quot;,&#xd;
      &quot;popup&quot;:{&#xd;
         &quot;menuitem&quot;:[&#xd;
            {&#xd;
               &quot;value&quot;:&quot;New&quot;,&#xd;
               &quot;onclick&quot;:&quot;CreateNewDoc()&quot;&#xd;
            },&#xd;
            {&#xd;
               &quot;value&quot;:&quot;Open&quot;,&#xd;
               &quot;onclick&quot;:&quot;OpenDoc()&quot;&#xd;
            },&#xd;
            {&#xd;
               &quot;value&quot;:&quot;Close&quot;,&#xd;
               &quot;onclick&quot;:&quot;CloseDoc()&quot;&#xd;
            }&#xd;
         ]&#xd;
      }&#xd;
   }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">service1/action1</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzUxMiJ9.eyJqdGkiOiIxMjM0NTYuMF9DaGFuZ3NraV8xNzA1NDQwNjkyOTQ2IiwiaXNzIjoiTEctTVJJUyIsInN1YiI6IkNoYW5nc2tpIiwiYXVkIjoiU3RvcmVVc2VycyIsImNhbGxlcklkIjowLCJ0ZW5hbnRJZCI6MTIzNDU2LCJ0ZW5hbnROYW1lIjoiQ2hhbmdza2lfc3RvcmUxIiwiZXhwIjoxNzA1NDQ0MjkyLCJpYXQiOjE3MDU0NDA2OTJ9.fV4whJZoShKOop0y-englyIdOHuDOsfQPGvtwMkO0b6BCZ9daadrIp0rPW-Pn-7Sua89RtbC9_d77HZNqF8mY8XZuBMBGfLXsNQ7GvEI5N-vvrHRqUZZjyeuzLZ0BsLLJMbgrEJHIZH8BvLLrCsEd3GzBUI5tEdbTddPIzh7FLuD-w6Z6rEMWbTlQbdRk_fpNSwmQhe9tKoZvCDUREXPyGXOiIUkP3mo6-ZAzRHW7mDkOl8jJGqFvoYC-755Hk-Z8giLehhKnAdTiMrSMQI5on8bVJ5AAmHPQMTZ48PVLSqiAlTHsdsIDng1G3szKX99XmGt4vphHYwcEq5q_rK3HkW86UwjML-FHiSDIiMTIFeKTPSRSOet9hkGKhSeyvm3vjZ9_xvqwnmbwoYJPL2GiCtYJ6GJAigScaSVAA76kjDOecQR6GsRZWABqCoR5YQUp3MR00HFUDLtl09e1GfoJ9GcRoQBX5YlNii8T42hmXh2YsdzJ_taJU5Y-59xHVK41uVn48fgLBJChjLqZfl7kD3INRoRNLnOPZHO_6VHez1nPZ9F40asZV5WxsHkBXvbCAAX2x7FxOEUAuAZyW4W58zbf0tlizqAM8QC8br5eboFiowWOkbGe8zYDADv8xLoLCU9ZxC1rAh7GvZ7k3DW6jCvWGFXNEQHABKPgostnRI</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
