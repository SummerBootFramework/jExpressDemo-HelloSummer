######################################
# 1. MQTT.client server endpoint     #
# protocol: tcp/ssl/local/ws/wss     #
# Format> protocol://servername:port #
# Example> ssl://localhost:8883      #
######################################
MQTT.client.serverURI=ssl://localhost:8883
#MQTT.client.ssl.Protocol=TLSv1.3


###########################
# 2. MQTT.client keystore #
###########################
## Path to key store file. Use SSL/TLS when keystore is provided, otherwise use plain socket
MQTT.client.ssl.KeyStore=keystore.p12
MQTT.client.ssl.KeyStorePwd=DEC(changeit)
MQTT.client.ssl.KeyAlias=server1_2048.jexpress.org
MQTT.client.ssl.KeyPwd=DEC(changeit)



#############################
# 3. MQTT.client truststore #
#############################
## Path to trust store file. Auth the remote peer certificate when a truststore is provided, otherwise blindly trust all remote peer certificate
MQTT.client.ssl.TrustStore=truststore_mqtt_client.p12
MQTT.client.ssl.TrustStorePwd=DEC(changeit)

#MQTT.client.VerifyHostname=true


##################################
# 4. MQTT.client user credential #
##################################
#MQTT.client.clientId=
#MQTT.client.username=
#MQTT.client.password=DEC(plain text inside DEC() will be automatically encrypted by app root password when the application starts or is running)


############################
# 5. MQTT.client messaging #
############################
## 0=At most once, Fire-and-Forget (QoS 0), 1=At least once (QoS 1), 2=Exactly once (QoS 2)
#MQTT.client.defaultQoS=2



###############################
# 6. MQTT.client pub settings #
###############################
#MQTT.client.CleanStart=true
#MQTT.client.Retain=true
#MQTT.client.Topic=
