################################
# 1.1 LDAP connection settings #
################################
## set it true only when LDAP is implemented by Microsoft Active Directory (AD)
## false when use others like Open LDAP, IBM Tivoli, Apache
#ldap.type.AD=false

## LDAP will be disabled when host is not provided
#ldap.host=

## LDAP 389, LDAP over SSL 636, AD global 3268, AD global voer SSL 3269
#ldap.port=0

#ldap.baseDN=
#ldap.bindingUserDN=
#ldap.bindingPassword=DEC()
#ldap.TenantGroupName=


############################
# 1.2 LDAP Client keystore #
############################
#ldap.ssl.protocol=TLSv1.3
#ldap.ssl.KeyStore=
#ldap.ssl.KeyStorePwd=DEC()
#ldap.ssl.KeyAlias=
#ldap.ssl.KeyPwd=DEC()


##############################
# 1.3 LDAP Client truststore #
##############################
#ldap.ssl.TrustStore=
#ldap.ssl.TrustStorePwd=DEC()


##########
# 2. JWT #
##########
## Path to an encrypted RSA private key file in PKCS#8 format with minimal 2048 key size. To generate the keypair manually:
## 1. generate keypair: openssl genrsa -des3 -out keypair.pem 4096
## 2. export public key: openssl rsa -in keypair.pem -outform PEM -pubout -out public.pem
## 3. export private key: openssl rsa -in keypair.pem -out private_unencrypted.pem -outform PEM
## 4. encrypt and convert private key from PKCS#1 to PKCS#8: openssl pkcs8 -topk8 -inform PEM -outform PEM -in private_unencrypted.pem -out private.pem
jwt.asymmetric.SigningKeyFile=jwt_private.pem

## The password of this private key
jwt.asymmetric.SigningKeyPwd=ENC(xf3jrVGMrv2SzBGtDte2bQ==)

## Path to the public key file corresponding to this private key
jwt.asymmetric.ParsingKeyFile=jwt_public.pem

## HMAC-SHA key for bothe signing and parsing, it will be ignored when asymmetric one is specified.
## Use this command to generate this key: java -jar <app>.jar -jwt <HS256, HS384, HS512>
#jwt.symmetric.key=DEC()

#jwt.ttl.minutes=1440
#jwt.issuer=


#####################################################################################################################
# 3. Role mapping                                                                                                   #
# Map the role with user group (no matter the group is defined in LDAP or DB)                                       #
# Format: roles.<role name>.groups=csv list                                                                         #
# Format: roles.<role name>.users=csv list                                                                          #
# Example: the following example maps one group(AppAdmin_Group) and two users(johndoe, janejoe) to a role(AppAdmin) #
# Example: roles.AppAdmin.groups=AppAdmin_Group                                                                     #
# Example: roles.AppAdmin.users=johndoe, janejoe                                                                    #
#####################################################################################################################
roles.AppAdmin.groups=AdminGroup
#roles.AppAdmin.users=admin1, admin2
roles.Employee.groups=EmployeeGroup
#roles.Employee.users=employee1, employee2
